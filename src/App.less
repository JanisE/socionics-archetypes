// Portrait (mobile) by default.
@landscape: ~'(min-aspect-ratio: 1/1)';

// TODO Add cyrillic only if necessary.
@import url('https://fonts.googleapis.com/css?family=Roboto+Mono|Roboto:400,900&subset=latin-ext,cyrillic');
//@import url('https://fonts.googleapis.com/css?family=Roboto+Mono|Roboto:400,900&subset=latin-ext');

* {
  box-sizing: border-box;
}

html {
  font-size: 3vmin;
}

body {
  margin: 0;
  background: #ffffff;
  padding: 0;
  font-family: Roboto, sans-serif;
}


.hidden {
  display: none;
}

.App {
  display: flex;
  flex-direction: column;
  text-align: center;

  @media @landscape {
    flex-direction: row;
  }
}

.archetypes {
  flex: none;
  position: relative;

  @quadraSize: 50vmin;
  @zoom: 2.2;
  @cellDiff: @zoom * 1.5vmin;

  @typeInfoSize: (@quadraSize + @cellDiff) / 3;

  @cellSize: @typeInfoSize - @cellDiff;
  @quadraSpace: @cellDiff / 2;

  @introExtraCenter: @quadraSize;
  @introExtraRadius: 2 * @cellSize + abs(@cellSize - @typeInfoSize) * 2.5;

  @alphaColour: #e3fe5f;
  @betaColour: #ffe4e1;
  @gammaColour: #e6e6fa;
  @deltaColour: #eee8aa;



  width: 100vmin;
  height: 2 * @quadraSize;

  ul {
    margin: 0;
    padding: 0;
    list-style: none;

    li {
      position: absolute;
      margin: 0;
      padding: 0;
      cursor: pointer;

      .archetype-info {
        display: flex;
        flex-direction: column;
        justify-content: center;
        position: relative;

        width: @typeInfoSize;
        height: @typeInfoSize;
        font-size: @zoom * 0.85vmin;

        &.dichotomy-N {
          border: @zoom * 0.6vmin dotted #cccccc;
          border-radius: @typeInfoSize;
        }

        &.dichotomy-S {
          border: @zoom * 0.6vmin solid #cccccc;
          border-radius: @typeInfoSize;
        }

        &.dichotomy-T {
          background: #777777;
          color: #ffffff;
        }

        &.dichotomy-F {
          background: #f7f7f7;
        }

        .epithet {
          // Keep the content centered, but if too long, show only the beginning of it.
          display: flex;
          justify-content: center;
          font-weight: 900;

          div {
            max-width: 82%;
            overflow: hidden;
            white-space: nowrap;
          }
        }

        .socialRole {
          .epithet();
          font-weight: normal;
        }

        .socionicsAbbr,
        .dichotomyAbbr {
          font-family: 'Roboto Mono', monospace;
          font-size: @zoom * 0.8vmin;
        }

        svg {
          position: absolute;
          left: @zoom * 0.5vmin;
          width: @zoom * 1vmin;
          height: @zoom * 1vmin;
        }

        svg:nth-of-type(2) {
          left: auto;
          right: @zoom * 0.5vmin;
        }
      }

      &.pos-col-1 {
        left: @quadraSpace + 0 * @cellSize;
      }

      &.pos-col-2 {
        left: @quadraSpace + 1 * @cellSize;
      }

      &.pos-col-3 {
        left: @quadraSpace + 2 * @cellSize;
      }

      &.pos-col-4 {
        left: 5 * @quadraSpace + 3 * @cellSize;
      }

      &.pos-col-5 {
        left: 5 * @quadraSpace + 4 * @cellSize;
      }

      &.pos-col-6 {
        left: 5 * @quadraSpace + 5 * @cellSize;
      }

      &.pos-row-1 {
        top: @quadraSpace + 0 * @cellSize;
      }

      &.pos-row-2 {
        top: @quadraSpace + 1 * @cellSize;
      }

      &.pos-row-3 {
        top: @quadraSpace + 2 * @cellSize;
      }

      &.pos-row-4 {
        top: 5 * @quadraSpace + 3 * @cellSize;
      }

      &.pos-row-5 {
        top: 5 * @quadraSpace + 4 * @cellSize;
      }

      &.pos-row-6 {
        top: 5 * @quadraSpace + 5 * @cellSize;
      }

      .overlays {
        > div {
          display: none;

          position: absolute;
          top: 0;
          overflow: hidden;

          width: 100%;
          height: 100%;
          border-radius: @typeInfoSize;
          //border-width: 0.7vmin;
          //border-style: solid;

          .rel-shadow (@color) {
            box-shadow: 0 0 2vmin 0.7vmin @color;
          }

          &.rel-duality {
            .rel-shadow(green);
            color: green;
          }

          &.rel-identity,
          &.rel-activity,
          &.rel-mirror,
          &.rel-semidual,
          &.rel-illusionary,
          &.rel-cooperation,
          &.rel-quasiidentity {
            .rel-shadow(saddlebrown);
            color: saddlebrown;
          }

          &.rel-identity {
            box-shadow: 0 0 2.5vmin 1.5vmin #666666;
          }

          &.rel-kindred,
          &.rel-beneficiary,
          &.rel-benefactor,
          &.rel-supervisee,
          &.rel-supervisor,
          &.rel-superego,
          &.rel-contrary,
          &.rel-conflict {
            .rel-shadow(red);
            color: red;
          }

          // Relation label
          div:first-child {
            background: #cccccc;
            font-size: @zoom * 1.2vmin;
            font-weight: bold;
          }

          // Relation name
          div:last-child {
            position: absolute;
            bottom: 0;
            background: #dddddd;
            width: 100%;
            padding-bottom: @zoom * 0.5vmin;
            font-size: @zoom * 0.8vmin;
          }

        }
      }

      &.disabled {
        .disabler {
          display: block;
          opacity: 0.7;
          background: #222222;
        }

        &.quadra-alpha .disabler {
          background: @alphaColour;
        }

        &.quadra-beta .disabler {
          background: @betaColour;
        }

        &.quadra-gamma .disabler {
          background: @gammaColour;
        }

        &.quadra-delta .disabler {
          background: @deltaColour;
        }
      }
    }
  }

  .quadra-alpha-boundary,
  .quadra-beta-boundary,
  .quadra-gamma-boundary,
  .quadra-delta-boundary {
    position: absolute;
    left: 0;
    top: 0;
    width: @quadraSize;
    height: @quadraSize;
  }

  .quadra-alpha-boundary {
    background: @alphaColour;
  }

  .quadra-beta-boundary {
    background: @betaColour;
    left: @quadraSize;
  }

  .quadra-gamma-boundary {
    background: @gammaColour;
    left: @quadraSize;
    top: @quadraSize;
  }

  .quadra-delta-boundary {
    background: @deltaColour;
    top: @quadraSize;
  }

  @rationalWidth: @quadraSize / 8;

  .rationality-marker-horizontal,
  .rationality-marker-vertical {
    position: absolute;
    border: @zoom * 0.15vmin solid #666666;
    background: #bbbbbb;
    opacity: 0.2;
  }

  .rationality-marker-vertical {
    left: @quadraSize / 2 - @rationalWidth / 2;
    height: 2 * @quadraSize;
    width: @rationalWidth;
    border-top: none;
    border-bottom: none;

    &.right {
      left: @quadraSize + @quadraSize / 2 - @rationalWidth / 2;
    }
  }

  .rationality-marker-horizontal {
    top: @quadraSize / 2 - @rationalWidth / 2;
    width: 2 * @quadraSize;
    height: @rationalWidth;
    border-left: none;
    border-right: none;

    &.bottom {
      top: @quadraSize + @quadraSize / 2 - @rationalWidth / 2;
    }
  }

  .intro-extra-boundary {
    position: absolute;
    left: @introExtraCenter - @introExtraRadius;
    top: @introExtraCenter - @introExtraRadius;
    border: @zoom * 0.2vmin dashed #bbbbbb;
    border-radius: @introExtraRadius;
    width: 2 * @introExtraRadius;
    height: 2 * @introExtraRadius;
  }

  .quadra-values {
    .icon {
      @iconSize: 1rem;

      position: absolute;
      width: @iconSize;

      @firstFromEdge: (@quadraSize - @introExtraRadius) / 5;
      @secondFromEdge: calc(@firstFromEdge + 1.5 * @iconSize);
      @middle: calc(@quadraSize - @iconSize / 2);

      &.fe {
        top: @firstFromEdge;
        left: @middle;
      }

      &.ti {
        top: @secondFromEdge;
        left: @middle;
      }

      &.se {
        top: @middle;
        right: @secondFromEdge;
      }

      &.ni {
        top: @middle;
        right: @firstFromEdge;
      }

      &.te {
        bottom: @firstFromEdge;
        left: @middle;
      }

      &.fi {
        bottom: @secondFromEdge;
        left: @middle;
      }

      &.si {
        top: @middle;
        left: @firstFromEdge;
      }

      &.ne {
        top: @middle;
        left: @secondFromEdge;
      }

      svg {
        opacity: 0.7;
      }
    }
  }

  .information-elements {
    div {
      position: absolute;
      top: calc(@quadraSize - 2.5rem);
      left: calc(@quadraSize - 2.6rem);
      width: 5.2rem;

      visibility: hidden;
      box-shadow: 0 0 2.5vmin 1.5vmin #ffffff;
      background-color: rgba(255, 255, 255, 0.7);

      h3 {
        margin: 0 0 0.2rem;
        text-align: center;
        font-size: @zoom * 0.85vmin;
        font-weight: 900;
      }

      ol {
        display: grid;
        grid-template-columns: [inert] 1rem [contact] 1rem;
        grid-template-rows: 1rem 1rem 1rem 1rem;
        grid-column-gap: 0;
        grid-row-gap: 0;
        justify-content: center;

        margin: 0;
        padding: 0;
        list-style-type: none;

        li {
          margin: 0;
          padding: 0;
        }

        li:nth-child(1) {
          order: 1;
        }

        li:nth-child(2) {
          order: 2;
        }

        li:nth-child(3) {
          order: 4;
        }

        li:nth-child(4) {
          order: 3;
        }

        li:nth-child(5) {
          order: 6;
        }

        li:nth-child(6) {
          order: 5;
        }

        li:nth-child(7) {
          order: 7;
        }

        li:nth-child(8) {
          order: 8;
        }
      }
    }

    svg {
      width: @zoom * 1vmin;
      height: @zoom * 1vmin;
    }
  }
}

@import "relationships";

.rel-for-EIE .information-elements .EIE,
.rel-for-EII .information-elements .EII,
.rel-for-ESE .information-elements .ESE,
.rel-for-ESI .information-elements .ESI,
.rel-for-ILE .information-elements .ILE,
.rel-for-ILI .information-elements .ILI,
.rel-for-IEE .information-elements .IEE,
.rel-for-IEI .information-elements .IEI,
.rel-for-LIE .information-elements .LIE,
.rel-for-LII .information-elements .LII,
.rel-for-LSE .information-elements .LSE,
.rel-for-LSI .information-elements .LSI,
.rel-for-SLE .information-elements .SLE,
.rel-for-SLI .information-elements .SLI,
.rel-for-SEE .information-elements .SEE,
.rel-for-SEI .information-elements .SEI {
  visibility: visible;
}

.switches {
  display: flex;
  justify-content: space-evenly;
  //position: relative; // For the preferences icon.

  // The type square stays, the switches part - scrolls.
  height: calc(100vh - 100vmin);
  overflow-y: auto;

  @media @landscape {
    display: block;
    margin-top: 5vh;
    margin-left: 3vmin;
    min-width: 19rem;
    height: 94vh;
  }

  .fits-selected {
    background: #d9ffd9;
  }

  .dichotomies {
    min-width: 46vmin;

    @media @landscape {
      min-width: auto;
    }

    .pair {
      display: flex;
      justify-content: center;

      .MuiFormControlLabel-root-1, .jss1 {
        flex: 1;
        display: flex;

        &:first-child {
          flex-direction: row-reverse;
        }
      }
    }
  }

  .im-elements-and-small-groups {
    min-width: 46vmin;

    @media @landscape {
      min-width: auto;
    }
  }

  .im-elements {
    min-width: 46vmin;

    @media @landscape {
      margin-top: 2vmin;
      min-width: auto;
    }

    .form-control-label {
      display: inline-flex;
      align-items: center;

      &:first-child {
        flex-direction: row-reverse;
      }

      > svg:nth-child(2) {
        display: inline-block;
        width: 0.8rem;
        height: 0.8rem;
        cursor: pointer;
      }
    }
  }

  .small-groups > div {
    margin-top: 2vmin;

    display: grid;
    grid-template-columns: [left] 50% 50% [right];

    :nth-child(2n+1) {
      grid-column-start: left;
      flex-direction: row-reverse;
    }
  }

  .MuiFormControlLabel-root-1, .jss1 {
    margin: 0; // Undo the negative margins.
  }

  // Checkbox and radiobutton padding.
  .MuiIconButton-root-15, .jss15 {
    padding: 0.8vmin 1.5vmin;
  }
}

.preferences-icon {
  position: absolute;
  top: 101vw;
  right: 2vw;

  @media @landscape {
    top: 1vh;

  }
}

.preferences-drawer {
  .drawer-content {
    padding: 2vw;
  }

  .project-link {
    position: absolute;
    bottom: 5vh;
    left: 50%;
    transform: translateX(-50%);
  }
}

@media (hover: hover) and (pointer: fine) {
  .swipeable-drawer {
    // Hide the drawer's swipeable area for mouse-enabled computers (desktop),
    // to not cover the scroll-bar.
    // The drawer itself is inserted outside this container, so it will be visible fine.
    display: none;
  }
}

